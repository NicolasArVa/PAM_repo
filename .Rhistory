k <- tab$k
n <- tab$n
H*(x^n)/((k^n)+(x^n))
}
sapply(c, function(x)
hill_func(x, str)/1000)
c
sapply(c, function(x) hill_func(x, strs[1]) / 1000)
sapply(c, function(x) hill_func(x, strs[1]) / 1000)
sapply(c, function(x) hill_func(x, strs[1]) / 1000)
hill_func(1000, strs[1])
tab	<- tibble(strain = c("MG1655","MG1655 lacI",
"BLR","BLR lacI","BL21 lacI"),
H=c(2029, 1458, 5915, 11499, 9757),
k=c(54.9, 164, 69, 49.2, 37.2),
n=c(4.27, 1.9, 6.75, 2.3, 2.19))
tab	<- tibble(strain = c("MG1655","MG1655 lacI",
"BLR","BLR lacI","BL21 lacI"),
H=c(2029, 1458, 5915, 11499, 9757),
k=c(54.9, 164, 69, 49.2, 37.2),
n=c(4.27, 1.9, 6.75, 2.3, 2.19))
load("C:/Users/nicol/personal projects/PAM_repo/all_tidy_tables.RData")
fi_comparison_table %>% ggplot(aes(shape = strain))+
theme_classic()+
geom_point(aes(iptg, m), color = "red")+
geom_errorbar(aes(x = iptg, y = m, ymin = m_lower, ymax = m_upper), color = "red")+
geom_point(aes(iptg, fi), color = "blue")+
geom_errorbar(aes(x = iptg, y = fi, ymin = fi_lower, ymax = fi_upper), color = "blue")+
facet_wrap(~strain, scales = "free_y")
library(tidyverse)
fi_comparison_table %>% ggplot(aes(shape = strain))+
theme_classic()+
geom_point(aes(iptg, m), color = "red")+
geom_errorbar(aes(x = iptg, y = m, ymin = m_lower, ymax = m_upper), color = "red")+
geom_point(aes(iptg, fi), color = "blue")+
geom_errorbar(aes(x = iptg, y = fi, ymin = fi_lower, ymax = fi_upper), color = "blue")+
facet_wrap(~strain, scales = "free_y")
strs <- factor(c("MG1655", "MG1655 lacI", "BLR", "BLR lacI", "BL21 lacI"))
c <- c(1, 62, 100, 250, 1000)
# data frame for hill function parameters
tab <- tibble(
strain = strs,
H = c(2029, 1458, 5915, 11499, 9757),
k = c(54.9, 164, 69, 49.2, 37.2),
n = c(4.27, 1.9, 6.75, 2.3, 2.19)
)
# Calculation of fi from hill functions (fig 3 script):
predicted_fi <- DE3predictions_table %>%
rename(fi_lower = lower, fi_upper = upper)%>%
mutate(iptg = factor(iptg)) %>%
filter(iptg %in% c(1,62,100,250,1000))
# Calculation of fi from slopes of the hook graphs:
calculated_fi <- data %>%
filter(iptg %in% c(1,62,100,250,1000), time > 2) %>%
group_by(strain, iptg) %>%
summarize(m = coef(lm(production_rate~growth_rate))["growth_rate"],
m_lower = confint(lm(production_rate~growth_rate))[2,1],
m_upper = confint(lm(production_rate~growth_rate))[2,2],
b = coef(lm(production_rate~growth_rate))["(Intercept)"],
b_lower = confint(lm(production_rate~growth_rate))[1,1],
b_upper = confint(lm(production_rate~growth_rate))[1,2])
# Combination of both in one graph:
fi_comparison_table <- calculated_fi %>% left_join(predicted_fi, by = c("iptg", "strain")) %>%
mutate(m = round(m/1000, 2), m_lower = round(m_lower/1000, 2), m_upper = round(m_upper/1000, 2),
b = round(b/1000, 2), b_lower = round(b_lower/1000, 2), b_upper = round(b_upper/1000, 2),
fi = round(fi/1000, 2), fi_lower = round(fi_lower/1000, 2), fi_upper = round(fi_upper/1000, 2))
pr_prediction <- expand.grid(strain = strs, iptg = factor(c),
gr = seq(0, 0.6, 0.1)) %>%
left_join(fi_comparison_table, by = c("iptg", "strain")) %>%
select(strain, iptg, gr, fi) %>% arrange(strain, iptg) %>%
mutate(pr = fi*gr)
data %>%
filter(iptg %in% c(1,62,100,250,1000), time > 2, time <6) %>%
ggplot(aes(growth_rate, production_rate/1000, color = iptg))+
theme_classic()+
geom_smooth(method = "lm")+
geom_point()+
geom_line(data = pr_prediction, aes(gr, pr))+
##xlim(c(0, NA))+
#ylim(c(0, NA))+
facet_grid(strain~iptg, scales = "free")
fi_comparison_table %>% ggplot(aes(shape = strain))+
theme_classic()+
geom_point(aes(iptg, m), color = "red")+
geom_errorbar(aes(x = iptg, y = m, ymin = m_lower, ymax = m_upper), color = "red")+
geom_point(aes(iptg, fi), color = "blue")+
geom_errorbar(aes(x = iptg, y = fi, ymin = fi_lower, ymax = fi_upper), color = "blue")+
facet_wrap(~strain, scales = "free_y")
library(tidyverse)
library(ggpubr)
library(expandFunctions)
library(pracma)
#------------------------ non-linear regression --------------------------------------------
{
s <- c("MG1655", "MG1655 lacI", "BLR", "BLR lacI", "BL21 lacI")
DE3predictions_list <-lapply(1:length(s), function(i){
bl <- tidy_DE3_Hlim %>%
filter(strain == s[i], between(time,0.5,10)) %>%
filter(iptg == min(iptg)) %>%
select(phi)
x <- tidy_DE3_Hlim %>%
filter(strain == s[i], between(time,0.5,10)) %>%
group_by(iptg) %>%
mutate(phi = phi - bl) %>%
reframe(phi = max(phi))
model <- x %>%
nls(phi~a*(iptg^k / (iptg^k + b^k)),
data = ., start = list(a=8000, b=50, k = 2),
algorithm="port", lower=c(0,0,1))
iptg <- 0:1000
fi_hat <- predict(model, newdata = tibble(iptg = iptg))
# Calculate standard errors for predictions using DELTA METHOD:
a <- coef(model)["a"]
b <- coef(model)["b"]
k <- coef(model)["k"]
parameter_standard_errors <- sqrt(diag(vcov(model)))
prediction_error <- sqrt(
((iptg)^k / ((iptg)^k + b^k))^2 * parameter_standard_errors["a"]^2 +
(a * k * b^(k-1) * (iptg)^k / ((iptg)^k + b^k)^2 )^2 * parameter_standard_errors["b"]^2 +
(a * b^k * log(iptg / b) * (iptg)^k / ((iptg)^k + b^k)^2 )^2 * parameter_standard_errors["k"]^2
)
tibble(strain = s[i], iptg = 0:1000, fi = fi_hat,
# Calculate lower and upper bounds for the confidence intervals
lower = fi_hat - qnorm(0.975) * prediction_error,
upper = fi_hat + qnorm(0.975) * prediction_error,
error = prediction_error)
})
DE3predictions_table <- bind_rows(DE3predictions_list)
##----------------------------  Plot -----------------------------------------------------------------------------
#----------- Heterologous fraction as a hyperbolic function ---------------------------------------------
bl <- tidy_DE3_Hlim %>%
group_by(strain) %>%
filter(iptg == min(iptg), between(time,0.5,10)) %>%
select(time, phi) %>%
rename(bl = phi) %>%
ungroup
DE3_plot <- tidy_DE3_Hlim %>%
left_join(bl, by = c("strain", "time")) %>%
filter(between(time,0.5,10))%>%
group_by(strain, iptg) %>%
mutate(phi = phi - bl) %>%
summarize(phi = max(phi)) %>%
filter(!iptg %in% c(0,1))%>%
ggplot(aes(iptg/1000, phi/1000, shape = strain))+
theme_classic()+
geom_line(data = DE3predictions_table, aes(iptg/1000, fi/1000, linetype = strain),
size = unit(0.3, "mm"), show.legend = F)+
geom_point(aes(shape = strain), size = 3, show.legend = F)+
#geom_point(data = data.frame(iptg) , aes(iptg/1000, H/1000, shape="NEB Stable"), size = 3)+
xlab("IPTG concentration (mM)")+
ylab(expression(10^3~FU~OD^-1))+
scale_y_continuous(limit = c(0,14), breaks = seq(0, 14, by = 4))+
scale_shape_manual(values = c("MG1655" = 1, "BLR" = 0,
"MG1655 lacI" = 13, "BLR lacI" = 7,
"BL21 lacI" = 2),
name = "Strain")+
scale_linetype_manual(values = c("MG1655" = 3, "BLR" = 2,
"MG1655 lacI" = 3, "BLR lacI" = 2,
"BL21 lacI" = 1),
name = "Strain")+
theme(plot.margin = margin(0,0,0,0, "mm"),
legend.title = element_text(size = unit(6, "mm"), face = "bold"),
legend.text = element_text(size = unit(6, "mm")),
legend.box.margin = margin(0, 0, 0, 0),
legend.key.size = unit(5, "mm"),
axis.title.x = element_text(size = unit(9, "mm"), vjust = -1),
axis.title.y = element_text(size = unit(9, "mm"), vjust = 2),
axis.text.x = element_text(size = unit(8, "mm")),
axis.text.y = element_text(size = unit(8, "mm")))+
theme(aspect.ratio=4/6)
DE3_plot
}
hyperbolic_DE3predictions_table %>% filter(parameter=="b")%>%
select(-`t value`, -`Pr(>|t|)`) %>%
mutate(low = Estimate - qnorm(0.975)*`Std. Error`,
high = Estimate + qnorm(0.975)*`Std. Error`)%>%
ggplot(aes(strain, Estimate, ymin=low, ymax=high))+
geom_errorbar()+
geom_point()+
geom_hline(yintercept = 2, color = "red")+
ggtitle("Induction constant for different strains")+
ylab(expression("Induction constant ("~mu*M~")"))+
ylim(0, 360)
tags <- tibble(x_coord = 0.1,y_coord = c(3, 1.25, 6.5, 6.5),
label = c('D', 'E', 'B', 'C'),
strain = tidy_DE3_Hlim %>%
filter(strain != 'BL21 lacI') %>%
.$strain %>% unique())
PvG_grid <- tidy_DE3_Hlim %>%
filter(strain != "BL21 lacI" & time <= 5)%>%
mutate(iptg = as.factor(iptg))%>%
filter(iptg %in% c(1,62,100,250,1000)
) %>%
mutate(iptg = str_replace_all(iptg, "1$", "0")
)%>%
mutate(iptg = as.numeric(iptg))%>%arrange(iptg)%>%mutate(iptg = as.factor(iptg)) %>%
#-------------------------------------------------------------------
ggplot(aes(growth_rate, production_rate/1000, size = iptg, color = iptg))+
facet_wrap(~strain, scales = "free_y")+
theme_classic()+
geom_path()+
geom_text(data = tags, aes(x = x_coord, y = y_coord, label = label),
size = unit(3, "mm"), color = 'black')+
scale_color_manual(values = c("1000" = "black", "250"="grey30",
"100"="grey50","62"= "grey70",
"0"= "grey80"),
name = "IPTG concentration"
)+
scale_size_manual(values = c("1000" = unit(1.3, "mm"), "250"=unit(1, "mm"),
"100"=unit(0.7, "mm"),"62"= unit(0.4, "mm"),
"0"= unit(0.1, "mm")
),
name = "IPTG concentration"
)+
xlab("")+
ylab("")+
theme(plot.margin = margin(0,0,0,1, "mm"),
legend.title = element_text(size = unit(6, "mm"), face = "bold"),
legend.text = element_text(size = unit(6, "mm")),
legend.box.margin = margin(0, 0, 0, 0),
legend.key.size = unit(3, "mm"),
axis.text.x = element_text(size = unit(8, "mm")),
axis.text.y = element_text(size = unit(8, "mm")),
strip.text = element_text(size = unit(8, "mm")),
strip.background = element_rect(color = 'white'),
aspect.ratio=1/1)
{
#-------------------------------- BL21 lacI -----------------------------------------------------
{
p1 <- tidy_DE3_Hlim %>%
filter(strain == "BL21 lacI") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, phi, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.2)
phi <- ggplot_build(p1)$data[[2]]%>%
as_tibble() %>%
select(y)
p2 <- tidy_DE3_Hlim %>%
filter(strain == "BL21 lacI") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, growth_rate, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.12)
tab <- ggplot_build(p2)$data[[2]]%>%
as_tibble() %>%
select(colour, x, y)
a <- unique(tab$colour)
ind <- order(a)
b <- c(0,1,10,62,80,100,125,250,500,1000)
BL21_lacI_Hlim_fit <- bind_cols(tab, phi) %>%
set_names(c("iptg", "time", "growth_rate", "phi")) %>%
group_by(iptg) %>%
summarise(GR = max(growth_rate), phi = phi[which.max(growth_rate)]) %>%
mutate(iptg = b[ind]) %>%
arrange(iptg)
}
{
BL21_lacI_Hlim_fit %>%
ggplot(aes(GR, phi, color = iptg))+
geom_point()+
geom_path()
lr_C <- lm(phi~GR, BL21_lacI_Hlim_fit)
tab <- lr_C$coefficients %>%
set_names(c("b", "a"))
a <- tab[2]
b <- tab[1]
x <- seq(0, 2, 0.05)
y <- sapply(x, function(x) a*x + b)
BL21_lacI_Hline <- tibble(x = x, y = y)
}
#------------------------------- BLR lacI ----------------------------------------------------------------------------
{
p1 <- tidy_DE3_Hlim %>%
filter(strain == "BLR lacI") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, phi, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.2)
phi <- ggplot_build(p1)$data[[2]]%>%
as_tibble() %>%
select(y)
p2 <- tidy_DE3_Hlim %>%
filter(strain == "BLR lacI") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, growth_rate, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.12)
tab <- ggplot_build(p2)$data[[2]]%>%
as_tibble() %>%
select(colour, x, y)
a <- unique(tab$colour)
ind <- order(a)
b <- c(1,10,62,100,250,1000)
BLR_lacI_Hlim_fit <- bind_cols(tab, phi) %>%
set_names(c("iptg", "time", "growth_rate", "phi")) %>%
group_by(iptg) %>%
summarise(GR = max(growth_rate), phi = phi[which.max(growth_rate)]) %>%
mutate(iptg = b[ind]) %>%
arrange(iptg)
}
{BLR_lacI_Hlim_fit %>%
ggplot(aes(GR, phi, color = iptg))+
geom_point()+
geom_path()
lr_C <- lm(phi~GR, BLR_lacI_Hlim_fit)
tab <- lr_C$coefficients %>%
set_names(c("b", "a"))
a <- tab[2]
b <- tab[1]
x <- seq(0, 2, 0.05)
y <- sapply(x, function(x) a*x + b)
BLR_lacI_Hline <- tibble(x = x, y = y)
}
#---------------------------------- BLR ----------------------------------------------------------------------
{
p1 <- tidy_DE3_Hlim %>%
filter(strain == "BLR") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, phi, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.2)
phi <- ggplot_build(p1)$data[[2]]%>%
as_tibble() %>%
select(y)
p2 <- tidy_DE3_Hlim %>%
filter(strain == "BLR") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, growth_rate, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.12)
tab <- ggplot_build(p2)$data[[2]] %>%
as_tibble() %>%
select(colour, x, y)
a <- unique(tab$colour)
ind <- order(a)
b <- c(1,10,62,100,250,1000)
BLR_Hlim_fit <- bind_cols(tab, phi) %>%
set_names(c("iptg", "time", "growth_rate", "phi")) %>%
group_by(iptg) %>%
summarise(GR = max(growth_rate), phi = phi[which.max(growth_rate)]) %>%
mutate(iptg = b[ind]) %>%
arrange(iptg)
}
{BLR_Hlim_fit %>%
ggplot(aes(GR, phi, color = iptg))+
geom_point()+
geom_path()
lr_C <- lm(phi~GR, BLR_Hlim_fit)
tab <- lr_C$coefficients %>%
set_names(c("b", "a"))
a <- tab[2]
b <- tab[1]
x <- seq(0, 2, 0.05)
y <- sapply(x, function(x) a*x + b)
BLR_Hline <- tibble(x = x, y = y)
}
#------------------------------- MG1655 lacI -----------------------------------------------------------------
{
p1 <- tidy_DE3_Hlim %>%
filter(strain == "MG1655 lacI") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, phi, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.2)
phi <- ggplot_build(p1)$data[[2]]%>%
as_tibble() %>%
select(y)
p2 <- tidy_DE3_Hlim %>% filter(strain == "MG1655 lacI") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, growth_rate, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.12)
tab <- ggplot_build(p2)$data[[2]]%>%
as_tibble() %>%
select(colour, x, y)
a <- unique(tab$colour)
ind <- order(a)
b <- c(1,10,62,100,250,1000)
MG1655_lacI_Hlim_fit <- bind_cols(tab, phi) %>%
set_names(c("iptg", "time", "growth_rate", "phi")) %>%
group_by(iptg) %>%
summarise(GR = max(growth_rate), phi = phi[which.max(growth_rate)]) %>%
mutate(iptg = b[ind]) %>%
arrange(iptg)
}
{MG1655_lacI_Hlim_fit %>%
ggplot(aes(GR, phi, color = iptg))+
geom_point()+
geom_path()
lr_C <- lm(phi~GR, MG1655_lacI_Hlim_fit)
tab <- lr_C$coefficients %>%
set_names(c("b", "a"))
a <- tab[2]
b <- tab[1]
x <- seq(0, 2, 0.05)
y <- sapply(x, function(x) a*x + b)
MG1655_lacI_Hline <- tibble(x = x, y = y)
}
#--------------------------------- MG1655 -------------------------------------------------------------------------------------------
{
p1 <- tidy_DE3_Hlim %>%
filter(strain == "MG1655") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, phi, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.2)
phi <- ggplot_build(p1)$data[[2]] %>%
as_tibble() %>%
select(y)
p2 <- tidy_DE3_Hlim %>%
filter(strain == "MG1655") %>%
mutate(iptg = as.factor(iptg)) %>%
ggplot(aes(time, growth_rate, color = iptg))+
geom_point()+
geom_smooth(se = FALSE, span = 0.12)
tab <- ggplot_build(p2)$data[[2]]%>%
as_tibble() %>%
select(colour, x, y)
a <- unique(tab$colour)
ind <- order(a)
b <- c(1,10,62,100,250,1000)
MG1655_Hlim_fit <- bind_cols(tab, phi) %>%
set_names(c("iptg", "time", "growth_rate", "phi")) %>%
group_by(iptg) %>%
summarise(GR = max(growth_rate), phi = phi[which.max(growth_rate)]) %>%
mutate(iptg = b[ind]) %>%
arrange(iptg)
}
{
MG1655_Hlim_fit %>%
ggplot(aes(GR, phi, color = iptg))+
geom_point()+
geom_path()
lr_C <- lm(phi~GR, MG1655_Hlim_fit)
tab <- lr_C$coefficients %>%
set_names(c("b", "a"))
a <- tab[2]
b <- tab[1]
x <- seq(0, 2, 0.05)
y <- sapply(x, function(x) a*x + b)
MG1655_Hline <- tibble(x = x, y = y)
}
#---------------------------------------------------------------------------------
}
labx <- expression("Maximum growth rate ("~h^-1~")")
laby <- expression("Specific fluorescence ("~10^3~UF~OD^-1~")")
cols <- rainbow(10)
ggplot()+
geom_point(data = BL21_lacI_Hlim_fit, aes(GR, phi/1000, color = "BL21 lacI"),
size = 5)+
geom_line(data = BL21_lacI_Hline, aes(x,y/1000), color = cols[1], size = 1)+
geom_point(data = BLR_lacI_Hlim_fit, aes(GR, phi/1000, color = "BLR lacI"),
size = 5)+
geom_line(data = BLR_lacI_Hline, aes(x,y/1000), color = cols[3], size = 1)+
geom_point(data = BLR_Hlim_fit, aes(GR, phi/1000, color = "BLR"), size = 5)+
geom_line(data = BLR_Hline, aes(x,y/1000), color = cols[5], size = 1)+
geom_point(data = MG1655_lacI_Hlim_fit, aes(GR, phi/1000, color = "MG1655 lacI"), size = 5)+
geom_line(data = MG1655_lacI_Hline, aes(x,y/1000), color = cols[7], size = 1)+
geom_point(data = MG1655_Hlim_fit, aes(GR, phi/1000, color = "MG1655"), size = 5)+
geom_line(data = MG1655_Hline, aes(x,y/1000), color = cols[9], size = 1)+
scale_color_manual(values = c("BL21 lacI" = cols[1], "BLR lacI" = cols[3],
"BLR" = cols[5], "MG1655 lacI" = cols[7],
"MG1655" = cols[9]))+
ggtitle("H-lim graph for different E. coli strains")+
ylim(c(0,3))+
xlim(c(0.5,1.25))+
xlab(labx)+
ylab(laby)+
theme_classic()+
theme(plot.title = element_text(size= 22, vjust = 3),
plot.margin = margin(1,1,1,1.2, "cm"),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12),
axis.title.x = element_text(size = 15, vjust = -2),
axis.title.y = element_text(size = 15, vjust = 6))
data <- tidy_DE3_Hlim %>%
filter(iptg %in% c(1,62,100,250,1000)) %>%
mutate(iptg = as.factor(iptg))
ggplot(data = data, aes(growth_rate, production_rate/1000, color = iptg))+
theme_classic()+
geom_path()+
geom_point(aes(shape = iptg))+
geom_line(data = fi_predicted, aes(x,y/1000, color = iptg))+
geom_smooth(data  = data %>% filter(time > 2),
aes(growth_rate, production_rate/1000,
color = iptg), method = "lm", se = F)+
xlim(c(0, NA))+
ylim(c(0, NA))+
facet_wrap(~strain, scales = "free_y")
hyperbolic_DE3predictions_table %>% filter(parameter=="b")%>%
select(-`t value`, -`Pr(>|t|)`) %>%
mutate(low = Estimate - qnorm(0.975)*`Std. Error`,
high = Estimate + qnorm(0.975)*`Std. Error`)%>%
ggplot(aes(strain, Estimate, ymin=low, ymax=high))+
geom_errorbar()+
geom_point()+
geom_hline(yintercept = 2, color = "red")+
ggtitle("Induction constant for different strains")+
ylab(expression("Induction constant ("~mu*M~")"))+
ylim(0, 360)
hyperbolic_DE3predictions_table %>% filter(parameter=="b")%>%
select(-`t value`, -`Pr(>|t|)`) %>%
mutate(low = Estimate - qnorm(0.975)*`Std. Error`,
high = Estimate + qnorm(0.975)*`Std. Error`)%>%
ggplot(aes(strain, Estimate, ymin=low, ymax=high))+
geom_errorbar()+
geom_point()+
geom_hline(yintercept = 2, color = "red")+
ggtitle("Induction constant for different strains")+
ylab(expression("Induction constant ("~mu*M~")"))+
ylim(0, 360)
